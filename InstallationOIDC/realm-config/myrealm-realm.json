{
    "realm": "myrealm",
    "enabled": true,
    "sslRequired": "EXTERNAL",
  
    "userFederationProviders": [
      {
        "providerName": "ldap",
        "displayName": "OpenLDAP-Writable",
        "priority": 0,
        "config": {
          "importEnabled": "true",
          "syncRegistrations": "true",
          "connectionUrl": "ldap://openldap:389",
          "bindDn": "cn=admin,dc=example,dc=com",
          "bindCredential": "adminpassword",
          "usersDn": "ou=users,dc=example,dc=com",
          "editMode": "WRITABLE",
          "vendor": "other"
        }
      }
    ],
  
    "identityProviders": [
      {
        "alias": "auth0-idp",
        "providerId": "oidc",
        "enabled": true,
        "firstBrokerLoginFlowAlias": "first broker login with random password",
        "config": {
          "clientId": "YOUR_AUTH0_CLIENT_ID",
          "clientSecret": "YOUR_AUTH0_CLIENT_SECRET",
          "issuer": "https://YOUR_AUTH0_DOMAIN/",
          "authorizationUrl": "https://YOUR_AUTH0_DOMAIN/authorize",
          "tokenUrl": "https://YOUR_AUTH0_DOMAIN/oauth/token",
          "userInfoUrl": "https://YOUR_AUTH0_DOMAIN/userinfo",
          "defaultScope": "openid profile email",
          "useJwksUrl": "true"
        }
      }
    ],
  
    "authenticationFlows": [
      {
        "alias": "first broker login with random password",
        "description": "Custom flow that sets random LDAP password",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": false,
        "authenticationExecutions": [
          {
            "authenticator": "idp-create-user-if-unique",
            "requirement": "REQUIRED",
            "priority": 10
          },
          {
            "authenticator": "idp-review-profile",
            "requirement": "CONDITIONAL",
            "priority": 20
          },
          {
            "authenticator": "set-random-pwd-script-authenticator",
            "requirement": "REQUIRED",
            "priority": 30
          }
        ]
      }
    ],
  
"components": {
    "org.keycloak.storage.UserStorageProvider": [
      {
        "id": "openldap-writable",
        "name": "OpenLDAP-Writable",
        "providerId": "ldap",
        "providerType": "org.keycloak.storage.UserStorageProvider",
        "parentId": "myrealm",

        "config": {
          "priority": [ "0" ],
          "importEnabled": [ "true" ],
          "syncRegistrations": [ "true" ],
          "connectionUrl": [ "ldap://openldap:389" ],
          "bindDn": [ "cn=admin,dc=example,dc=com" ],
          "bindCredential": [ "adminpassword" ],
          "usersDn": [ "ou=users,dc=example,dc=com" ],
          "editMode": [ "WRITABLE" ],
          "vendor": [ "other" ]
        }
      }
    ],

    "org.keycloak.authentication.Authenticator": [
      {
        "id": "set-random-pwd-script-authenticator",
        "name": "SetRandomPasswordScript",
        "providerId": "script",
        "providerType": "org.keycloak.authentication.Authenticator",
        "parentId": "myrealm",
        "config": {
          "scriptCode": "var RandomString = Java.type(\"org.keycloak.common.util.RandomString\");\\nvar PasswordCredentialModel = Java.type(\"org.keycloak.models.credential.PasswordCredentialModel\");\\n\\nfunction authenticate(context) {\\n    var user = context.getUser();\\n    if (!user) {\\n        context.attempted();\\n        return;\\n    }\\n    var randomPassword = RandomString.randomCode(12); // 12 char random pwd\\n    var credential = PasswordCredentialModel.createFromValues(randomPassword, false);\\n\\n    session.userCredentialManager().updateCredential(realm, user, credential);\\n    // print(\"Assigned random LDAP password: \" + randomPassword);\\n\\n    context.success();\\n}\\n\\nfunction action(context) {}\\nfunction requiresUser() { return true; }\\nfunction configuredFor(context, user) { return false; }\\nfunction setRequiredActions(context, user) {}\\nfunction close() {}"
        }
      }
    ]
  }
  }
  