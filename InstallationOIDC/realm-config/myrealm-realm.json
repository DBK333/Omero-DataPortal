{
    "realm": "myrealm",
    "enabled": true,
    "sslRequired": "EXTERNAL",
  
    "userFederationProviders": [
      {
        "providerName": "ldap",
        "displayName": "OpenLDAP-Writable",
        "priority": 0,
        "config": {
          "importEnabled": "true",
          "syncRegistrations": "true",
          "connectionUrl": "ldap://openldap:389",
          "bindDn": "cn=admin,dc=example,dc=com",
          "bindCredential": "adminpassword",
          "usersDn": "ou=users,dc=example,dc=com",
          "editMode": "WRITABLE",
          "vendor": "other"
        }
      }
    ],
  
    "identityProviders": [
      {
        "alias": "auth0-idp",
        "providerId": "oidc",
        "enabled": true,
        "firstBrokerLoginFlowAlias": "first broker login with random password",
        "config": {
          "clientId": "YOUR_AUTH0_CLIENT_ID",
          "clientSecret": "YOUR_AUTH0_CLIENT_SECRET",
          "issuer": "https://YOUR_AUTH0_DOMAIN/",
          "authorizationUrl": "https://YOUR_AUTH0_DOMAIN/authorize",
          "tokenUrl": "https://YOUR_AUTH0_DOMAIN/oauth/token",
          "userInfoUrl": "https://YOUR_AUTH0_DOMAIN/userinfo",
          "defaultScope": "openid profile email",
          "useJwksUrl": "true"
        }
      }
    ],
  
    "authenticationFlows": [
      {
        "alias": "first broker login with random password",
        "description": "Custom flow that sets random LDAP password",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": false,
        "authenticationExecutions": [
          {
            "authenticator": "idp-create-user-if-unique",
            "requirement": "REQUIRED",
            "priority": 10
          },
          {
            "authenticator": "idp-review-profile",
            "requirement": "CONDITIONAL",
            "priority": 20
          },
          {
            "authenticator": "set-random-pwd-script-authenticator",
            "requirement": "REQUIRED",
            "priority": 30
          }
        ]
      }
    ],
  
    "components": {
  "org.keycloak.storage.UserStorageProvider": [
    {
      "id": "openldap-writable",
      "name": "OpenLDAP-Writable",
      "providerId": "ldap",
      "config": {
        "priority": [ "0" ],
        "importEnabled": [ "true" ],
        "syncRegistrations": [ "true" ],
        "connectionUrl": [ "ldap://openldap:389" ],
        "bindDn": [ "cn=admin,dc=example,dc=com" ],
        "bindCredential": [ "adminpassword" ],
        "usersDn": [ "ou=users,dc=example,dc=com" ],
        "editMode": [ "WRITABLE" ],
        "vendor": [ "other" ]
      }
    }
  ],

  "org.keycloak.authentication.Authenticator": [
    {
        "id": "set-random-pwd-script-authenticator",
        "name": "SetRandomPasswordScript",
        "providerId": "script-authenticator",
        "config": {
          "scriptCode": [
            "var RandomString = Java.type(\"org.keycloak.common.util.RandomString\");",
            "var PasswordCredentialModel = Java.type(\"org.keycloak.models.credential.PasswordCredentialModel\");",
            "",
            "function authenticate(context) {",
            "    var user = context.getUser();",
            "    if (!user) {",
            "        context.attempted();",
            "        return;",
            "    }",
            "    var randomPassword = RandomString.randomCode(12); // 12 char random pwd",
            "    var credential = PasswordCredentialModel.createFromValues(randomPassword, false);",
            "",
            "    session.userCredentialManager().updateCredential(realm, user, credential);",
            "    context.success();",
            "}",
            "",
            "function action(context) {}",
            "function requiresUser() { return true; }",
            "function configuredFor(context, user) { return false; }",
            "function setRequiredActions(context, user) {}",
            "function close() {}"
          ]
        }
      }            
  ]
}
}
  