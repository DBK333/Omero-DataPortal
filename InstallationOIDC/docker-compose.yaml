version: '3.8'

services:
  # --------------------------
  # POSTGRES (Keycloak Database)
  # --------------------------
  postgres:
    image: postgres:14
    container_name: keycloak-postgres
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U keycloak"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - auth-net

  # --------------------------
  # KEYCLOAK (Identity Broker)
  # --------------------------
  keycloak:
    image: quay.io/keycloak/keycloak:latest
    container_name: keycloak
    environment:
      # Database connection
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres:5432/keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: password

      # Admin credentials
      KC_BOOTSTRAP_ADMIN_USERNAME: admin
      KC_BOOTSTRAP_ADMIN_PASSWORD: admin

      # Run Keycloak on HTTP internally (SSL is terminated at Traefik)
      KC_HTTP_ENABLED: "true"
      KC_PROXY_HEADERS: xforwarded
      KC_HOSTNAME_STRICT: "false"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.keycloak.rule=Host(`auth.example.com`)"
      - "traefik.http.routers.keycloak.entrypoints=websecure"
      - "traefik.http.routers.keycloak.tls=true"
      - "traefik.http.routers.keycloak.tls.certresolver=myresolver"
    ports:
      - "8080:8080"  # Expose internally for debugging (Traefik will use HTTPS externally)
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./realm-config:/opt/keycloak/data/import
    networks:
      - auth-net
      - traefik-net

  # --------------------------
  # OPENLDAP (User Store)
  # --------------------------
  openldap:
    image: bitnami/openldap:latest
    container_name: openldap
    restart: unless-stopped
    environment:
      LDAP_ROOT: dc=example,dc=com
      LDAP_ADMIN_USERNAME: admin
      LDAP_ADMIN_PASSWORD: adminpassword
      LDAP_CONFIG_ADMIN_ENABLED: "yes"
      LDAP_CONFIG_ADMIN_PASSWORD: configpassword
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.ldap.rule=Host(`ldap.example.com`)"
      - "traefik.http.routers.ldap.entrypoints=websecure"
      - "traefik.http.routers.ldap.tls=true"
      - "traefik.http.routers.ldap.tls.certresolver=myresolver"
    ports:
      - "389:389"
      - "636:636"
    volumes:
      - openldap_data:/bitnami/openldap
    networks:
      - auth-net
      - traefik-net

  # --------------------------
  # TRAEFIK (Reverse Proxy & SSL Termination)
  # --------------------------
  traefik:
    image: traefik:v2.8
    container_name: traefik
    command:
      - "--log.level=INFO"
      - "--api.insecure=false"  # Disable or secure the dashboard in production
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
      - "--certificatesresolvers.myresolver.acme.email=youremail@example.com"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - "./letsencrypt:/letsencrypt"
    networks:
      - traefik-net
      - auth-net

volumes:
  postgres_data:
  openldap_data:

networks:
  auth-net:
  traefik-net:
