version: '3.8'

services:
  # --------------------------
  # OPENLDAP
  # --------------------------
  openldap:
    image: bitnami/openldap:latest
    container_name: openldap
    restart: unless-stopped
    ports:
      - "389:1389"    # Non-secure LDAP port
      #- "636:1636"    # Secure LDAP (LDAPS) port
    environment:
      # Basic LDAP configuration
      LDAP_ROOT: dc=example,dc=com
      LDAP_ADMIN_USERNAME: admin
      LDAP_ADMIN_PASSWORD: adminpassword
      LDAP_CONFIG_ADMIN_ENABLED: "yes"
      LDAP_CONFIG_ADMIN_PASSWORD: configpassword
      # Disable TLS/LDAPS
      LDAP_ENABLE_TLS: "no"
      # Specify certificate paths (inside the container)
      #LDAP_TLS_CERT_FILE: /opt/bitnami/openldap/certs/ldap.crt
      #LDAP_TLS_KEY_FILE: /opt/bitnami/openldap/certs/ldap.key
      #LDAP_TLS_CA_FILE: /opt/bitnami/openldap/certs/ca.crt
    volumes:
      - openldap_data:/bitnami/openldap
      # Mount your local certificate directory to the container's cert directory
      #- /path/to/certs:/opt/bitnami/openldap/certs
    networks:
      - oidc-network

  # --------------------------
  # POSTGRES
  # --------------------------
  postgres:
    image: postgres:14
    container_name: keycloak-postgres
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U keycloak"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - oidc-network

  # --------------------------
  # KEYCLOAK
  # --------------------------
  keycloak:
    build:
      context: .
      dockerfile: keycloak.dev.Dockerfile
    container_name: keycloak
    environment:
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres:5432/keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: password
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_PROXY_HEADERS: xforwarded
      KC_HTTP_ENABLED: "true"
      KC_HOSTNAME_STRICT: "false"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./realm-config:/opt/keycloak/data/import
    command: 
      - start-dev
      - --import-realm
    networks:
      - oidc-network

  ngrok:
    image: ngrok/ngrok:latest
    container_name: ngrok
    environment:
      - NGROK_AUTHTOKEN=${NGROK_AUTH_TOKEN}
    command: http keycloak:8080
    ports:
      - "4040:4040"
    depends_on:
      - keycloak
    networks:      
      - oidc-network
volumes:
  openldap_data:
  postgres_data:

networks:
  oidc-network:
