version: '3.8'

services:
  # --------------------------
  # OPENLDAP
  # --------------------------
  openldap:
    image: bitnami/openldap:latest
    container_name: openldap
    restart: unless-stopped
    ports:
      - "389:389"    # LDAP port
      - "636:636"    # LDAPS port
    environment:
      LDAP_ROOT: dc=example,dc=com
      LDAP_ADMIN_USERNAME: admin
      LDAP_ADMIN_PASSWORD: adminpassword
      LDAP_CONFIG_ADMIN_ENABLED: "yes"
      LDAP_CONFIG_ADMIN_PASSWORD: configpassword
    volumes:
      - openldap_data:/bitnami/openldap
    networks:
      - oidc-network

  # --------------------------
  # POSTGRES
  # --------------------------
  postgres:
    image: postgres:14
    container_name: keycloak-postgres
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U keycloak"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - oidc-network

  # --------------------------
  # KEYCLOAK
  # --------------------------
  keycloak:
    build:
      context: .
      dockerfile: keycloak.dev.Dockerfile
    container_name: keycloak
    environment:
      # Database connection:
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres:5432/keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: password

      # Keycloak admin credentials:
      KC_BOOTSTRAP_ADMIN_USERNAME: admin
      KC_BOOTSTRAP_ADMIN_PASSWORD: admin

      # Additional Keycloak settings:
      KC_PROXY_HEADERS: xforwarded
      KC_HTTP_ENABLED: "true"
      KC_HOSTNAME_STRICT: "false"
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./realm-config:/opt/keycloak/data/import
    networks:
      - oidc-network

volumes:
  openldap_data:
  postgres_data:

networks:
  oidc-network:
